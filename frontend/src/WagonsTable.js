import React, { useState } from "react";

// –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
const DUMMY_DATA = [
  { id: 1, number: "12345678", direction: "–µ–≤—Ä–æ–ø–∞", status: "–æ–∂–∏–¥–∞–Ω–∏–µ", date: "2025-05-21", track: "—É–∑–∫–∏–π" },
  { id: 2, number: "87654321", direction: "–∞–ª–º–∞—Ç—ã", status: "–ø—Ä–∏–±—ã–ª", date: "2025-05-21", track: "—à–∏—Ä–æ–∫–∏–π" },
  { id: 3, number: "55556666", direction: "—É–∑–±–µ–∫–∏—Å—Ç–∞–Ω", status: "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", date: "2025-05-20", track: "—É–∑–∫–∏–π" },
  { id: 4, number: "11223344", direction: "–µ–≤—Ä–æ–ø–∞", status: "–æ–∂–∏–¥–∞–Ω–∏–µ", date: "2025-05-20", track: "—à–∏—Ä–æ–∫–∏–π" },
  { id: 5, number: "99887766", direction: "–∞–ª–º–∞—Ç—ã", status: "–ø—Ä–∏–±—ã–ª", date: "2025-05-19", track: "—É–∑–∫–∏–π" }
];

// –¶–≤–µ—Ç–∞ ‚Äî –Ω–µ—è—Ä–∫–∏–µ, –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ (rgba, pastel)
const trackColors = {
  —à–∏—Ä–æ–∫–∏–π: "rgba(54, 113, 204, 0.16)", // –ø–∞—Å—Ç–µ–ª—å–Ω—ã–π —Å–∏–Ω–∏–π
  —É–∑–∫–∏–π:   "rgba(239, 68, 68, 0.15)"   // –ø–∞—Å—Ç–µ–ª—å–Ω—ã–π –∫—Ä–∞—Å–Ω—ã–π
};
const directionColors = {
  –µ–≤—Ä–æ–ø–∞:    "rgba(34, 197, 94, 0.15)",   // –ø–∞—Å—Ç–µ–ª—å–Ω—ã–π –∑–µ–ª—ë–Ω—ã–π
  –∞–ª–º–∞—Ç—ã:    "rgba(253, 224, 71, 0.18)",  // –ø–∞—Å—Ç–µ–ª—å–Ω—ã–π –∂—ë–ª—Ç—ã–π
  —É–∑–±–µ–∫–∏—Å—Ç–∞–Ω:"rgba(239, 68, 68, 0.14)"    // –ø–∞—Å—Ç–µ–ª—å–Ω—ã–π –∫—Ä–∞—Å–Ω—ã–π
};
const statusColors = {
  –æ–∂–∏–¥–∞–Ω–∏–µ:  "rgba(253, 224, 71, 0.16)",  // –ø–∞—Å—Ç–µ–ª—å–Ω—ã–π –∂—ë–ª—Ç—ã–π
  –ø—Ä–∏–±—ã–ª:    "rgba(54, 113, 204, 0.14)",  // –ø–∞—Å—Ç–µ–ª—å–Ω—ã–π —Å–∏–Ω–∏–π
  –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: "rgba(34, 197, 94, 0.15)"    // –ø–∞—Å—Ç–µ–ª—å–Ω—ã–π –∑–µ–ª—ë–Ω—ã–π
};

function uniq(arr) {
  return [...new Set(arr)];
}

const ContainersTable = () => {
  const [data, setData] = useState(DUMMY_DATA);
  const [search, setSearch] = useState("");
  const [direction, setDirection] = useState("");
  const [status, setStatus] = useState("");
  const [track, setTrack] = useState("");
  const [date, setDate] = useState("");

  // –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
  const resetFilters = () => {
    setSearch("");
    setDirection("");
    setStatus("");
    setTrack("");
    setDate("");
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è
  const filtered = data.filter(
    (row) =>
      (!search || row.number.includes(search)) &&
      (!direction || row.direction === direction) &&
      (!status || row.status === status) &&
      (!track || row.track === track) &&
      (!date || row.date === date)
  );

  // –°–º–µ–Ω–∞ —Å—Ç–∞—Ç—É—Å–∞ (–¥–µ–º–æ)
  const changeStatus = (id, newStatus) => {
    setData((old) =>
      old.map((row) => (row.id === id ? { ...row, status: newStatus } : row))
    );
  };

  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ
  const dates = uniq(filtered.map(r => r.date)).sort((a, b) => b.localeCompare(a));
  const grouped = dates.map(date => ({
    date,
    containers: filtered.filter(c => c.date === date)
  }));

  // –î–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –¥–∞—Ç–µ ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–∞—Ç—ã –∏–∑ –≤—Å–µ–≥–æ –º–∞—Å—Å–∏–≤–∞ (–Ω–µ —Ç–æ–ª—å–∫–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ)
  const dateOptions = uniq(data.map(r => r.date)).sort((a, b) => b.localeCompare(a));

  return (
    <div>
      <h2 style={{ fontWeight: 600, fontSize: "1.6rem", marginBottom: 20 }}>üöö –¢–∞–±–ª–∏—Ü–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤</h2>
      <div style={{ display: "flex", gap: 10, marginBottom: 16, flexWrap: "wrap" }}>
        <input
          placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É"
          value={search}
          onChange={(e) => setSearch(e.target.value)}
          style={{ padding: 8, width: 180, borderRadius: 8, border: "1px solid #d1d5db" }}
        />
        <select value={direction} onChange={(e) => setDirection(e.target.value)} style={select}>
          <option value="">–í—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è</option>
          <option value="–µ–≤—Ä–æ–ø–∞">–ï–≤—Ä–æ–ø–∞</option>
          <option value="–∞–ª–º–∞—Ç—ã">–ê–ª–º–∞—Ç—ã</option>
          <option value="—É–∑–±–µ–∫–∏—Å—Ç–∞–Ω">–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω</option>
        </select>
        <select value={status} onChange={(e) => setStatus(e.target.value)} style={select}>
          <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
          <option value="–æ–∂–∏–¥–∞–Ω–∏–µ">–û–∂–∏–¥–∞–Ω–∏–µ</option>
          <option value="–ø—Ä–∏–±—ã–ª">–ü—Ä–∏–±—ã–ª</option>
          <option value="–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω</option>
        </select>
        <select value={track} onChange={(e) => setTrack(e.target.value)} style={select}>
          <option value="">–í—Å–µ –ø—É—Ç–∏</option>
          <option value="—É–∑–∫–∏–π">–ö–∏—Ç–∞–π—Å–∫–∏–π –ø—É—Ç—å (—É–∑–∫–∏–π)</option>
          <option value="—à–∏—Ä–æ–∫–∏–π">–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π –ø—É—Ç—å (—à–∏—Ä–æ–∫–∏–π)</option>
        </select>
        <select value={date} onChange={(e) => setDate(e.target.value)} style={select}>
          <option value="">–í—Å–µ –¥–∞—Ç—ã</option>
          {dateOptions.map(d => (
            <option key={d} value={d}>{d}</option>
          ))}
        </select>
        <button onClick={resetFilters} style={{
          padding: "8px 16px",
          borderRadius: 8,
          border: "1px solid #d1d5db",
          background: "#f3f4f6",
          cursor: "pointer",
          fontWeight: 600
        }}>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä</button>
      </div>

      {grouped.length === 0 ? (
        <div style={{ padding: 30, textAlign: "center", borderRadius: 16, background: "#f1f5f9", color: "#6b7280", marginTop: 32 }}>
          –ù–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º
        </div>
      ) : (
        grouped.map(group => (
          <div key={group.date} style={{ marginBottom: 36 }}>
            <div style={{
              fontWeight: 700,
              fontSize: "1.18rem",
              background: "#F7F8FA",
              padding: "8px 22px",
              borderRadius: "14px 14px 0 0",
              marginTop: 18,
              marginBottom: 0,
              display: "inline-block"
            }}>
              üóì {group.date}
            </div>
            <table style={{
              borderCollapse: "separate",
              borderSpacing: 0,
              width: "100%",
              borderRadius: 16,
              overflow: "hidden",
              boxShadow: "0 2px 16px #0001"
            }}>
              <thead>
                <tr>
                  <th style={th}>‚Ññ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä</th>
                  <th style={th}>–ü—É—Ç—å</th>
                  <th style={th}>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</th>
                  <th style={th}>–°—Ç–∞—Ç—É—Å</th>
                  <th style={th}>–î–µ–π—Å—Ç–≤–∏–µ</th>
                </tr>
              </thead>
              <tbody>
                {group.containers.map((row, idx) => (
                  <tr key={row.id}
                    style={{
                      borderRadius: idx === group.containers.length - 1 ? "0 0 16px 16px" : 0,
                      background: idx % 2 ? "#F8F9FB" : "#fff"
                    }}>
                    <td style={td}>{row.number}</td>
                    <td style={{
                      ...td,
                      background: trackColors[row.track],
                      borderRadius: 7,
                      fontWeight: 600,
                      color: "#222"
                    }}>
                      {row.track === "—É–∑–∫–∏–π" ? "–£–∑–∫–∏–π (–ö–∏—Ç–∞–π)" : "–®–∏—Ä–æ–∫–∏–π (–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω)"}
                    </td>
                    <td style={{
                      ...td,
                      background: directionColors[row.direction],
                      borderRadius: 7,
                      fontWeight: 600
                    }}>{row.direction}</td>
                    <td style={{
                      ...td,
                      background: statusColors[row.status],
                      borderRadius: 7,
                      fontWeight: 600
                    }}>{row.status}</td>
                    <td style={td}>
                      <select value={row.status} onChange={e => changeStatus(row.id, e.target.value)} style={{ padding: 4, borderRadius: 6 }}>
                        <option value="–æ–∂–∏–¥–∞–Ω–∏–µ">–û–∂–∏–¥–∞–Ω–∏–µ</option>
                        <option value="–ø—Ä–∏–±—ã–ª">–ü—Ä–∏–±—ã–ª</option>
                        <option value="–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω</option>
                      </select>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        ))
      )}
    </div>
  );
};

const th = {
  border: "none",
  background: "#F7F8FA",
  padding: "10px 15px",
  fontWeight: 700,
  fontSize: "1rem",
  color: "#1e293b",
  borderTop: "1px solid #e5e7eb",
  borderBottom: "1px solid #e5e7eb"
};
const td = {
  border: "none",
  padding: "10px 12px",
  fontSize: "1rem",
  textAlign: "center"
};
const select = {
  padding: "8px",
  borderRadius: 8,
  border: "1px solid #d1d5db",
  fontWeight: 500
};

export default ContainersTable;